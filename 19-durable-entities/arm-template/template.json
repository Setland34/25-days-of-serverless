{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "IotHubs_aircompressor_connectionString": {
            "type": "SecureString"
        },
        "IotHubs_aircompressor_containerName": {
            "type": "SecureString"
        },
        "sites_aircompressor_name": {
            "defaultValue": "aircompressor",
            "type": "String"
        },
        "IotHubs_aircompressor_name": {
            "defaultValue": "aircompressor",
            "type": "String"
        },
        "workflows_aircompressor_name": {
            "defaultValue": "aircompressor",
            "type": "String"
        },
        "serverfarms_ASP_Day19_8ab8_name": {
            "defaultValue": "ASP-Day19-8ab8",
            "type": "String"
        },
        "components_aircompressor_name": {
            "defaultValue": "aircompressor",
            "type": "String"
        },
        "storageAccounts_storageaccountday1995ca_name": {
            "defaultValue": "storageaccountday1995ca",
            "type": "String"
        },
        "smartdetectoralertrules_failure_anomalies___aircompressor_name": {
            "defaultValue": "failure anomalies - aircompressor",
            "type": "String"
        },
        "actiongroups_application_20insights_20smart_20detection_externalid": {
            "defaultValue": "/subscriptions/5f11eaf5-68e6-4e7a-b2ba-33f03b1724e8/resourceGroups/25daysofserverless_rg/providers/microsoft.insights/actiongroups/application%20insights%20smart%20detection",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Devices/IotHubs",
            "apiVersion": "2019-11-04",
            "name": "[parameters('IotHubs_aircompressor_name')]",
            "location": "uksouth",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "capacity": 1
            },
            "properties": {
                "ipFilterRules": [],
                "eventHubEndpoints": {
                    "events": {
                        "retentionTimeInDays": 1,
                        "partitionCount": 4
                    }
                },
                "routing": {
                    "endpoints": {
                        "serviceBusQueues": [],
                        "serviceBusTopics": [],
                        "eventHubs": [],
                        "storageContainers": []
                    },
                    "routes": [
                        {
                            "name": "RouteToEventGrid",
                            "source": "DeviceMessages",
                            "condition": "true",
                            "endpointNames": [
                                "eventgrid"
                            ],
                            "isEnabled": true
                        }
                    ],
                    "fallbackRoute": {
                        "name": "$fallback",
                        "source": "DeviceMessages",
                        "condition": "true",
                        "endpointNames": [
                            "events"
                        ],
                        "isEnabled": true
                    }
                },
                "storageEndpoints": {
                    "$default": {
                        "sasTtlAsIso8601": "PT1H",
                        "connectionString": "[parameters('IotHubs_aircompressor_connectionString')]",
                        "containerName": "[parameters('IotHubs_aircompressor_containerName')]"
                    }
                },
                "messagingEndpoints": {
                    "fileNotifications": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "enableFileUploadNotifications": false,
                "cloudToDevice": {
                    "maxDeliveryCount": 10,
                    "defaultTtlAsIso8601": "PT1H",
                    "feedback": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "features": "None"
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2015-05-01",
            "name": "[parameters('components_aircompressor_name')]",
            "location": "uksouth",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Request_Source": "IbizaWebAppExtensionCreate"
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_aircompressor_name')]",
            "location": "uksouth",
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "data": {
                                                "properties": {
                                                    "body": {
                                                        "properties": {
                                                            "action": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "properties": {
                                                        "properties": {
                                                            "Status": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "systemProperties": {
                                                        "properties": {
                                                            "iothub-connection-auth-generation-id": {
                                                                "type": "string"
                                                            },
                                                            "iothub-connection-auth-method": {
                                                                "type": "string"
                                                            },
                                                            "iothub-connection-device-id": {
                                                                "type": "string"
                                                            },
                                                            "iothub-content-encoding": {
                                                                "type": "string"
                                                            },
                                                            "iothub-content-type": {
                                                                "type": "string"
                                                            },
                                                            "iothub-enqueuedtime": {
                                                                "type": "string"
                                                            },
                                                            "iothub-message-source": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "dataVersion": {
                                                "type": "string"
                                            },
                                            "eventTime": {
                                                "type": "string"
                                            },
                                            "eventType": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "metadataVersion": {
                                                "type": "string"
                                            },
                                            "subject": {
                                                "type": "string"
                                            },
                                            "topic": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "topic",
                                            "subject",
                                            "eventType",
                                            "eventTime",
                                            "data",
                                            "dataVersion",
                                            "metadataVersion"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "actions": {
                        "For_each": {
                            "foreach": "@triggerBody()",
                            "actions": {
                                "Switch": {
                                    "runAfter": {},
                                    "cases": {
                                        "Compressor_Started": {
                                            "case": "start",
                                            "actions": {
                                                "Compressor_Function_Call_-_Start_action": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "method": "GET",
                                                        "uri": "[concat('https://', parameters('workflows_aircompressor_name'), '.azurewebsites.net/api/compressor/start')]"
                                                    }
                                                }
                                            }
                                        },
                                        "Compressor_Stopped": {
                                            "case": "stop",
                                            "actions": {
                                                "Compressor_Function_Call_-_Stop_action": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "method": "GET",
                                                        "uri": "[concat('https://', parameters('workflows_aircompressor_name'), '.azurewebsites.net/api/compressor/stop')]"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "default": {
                                        "actions": {}
                                    },
                                    "expression": "@items('For_each')?['data']?['body']?['action']",
                                    "type": "Switch"
                                }
                            },
                            "runAfter": {},
                            "type": "Foreach"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('storageAccounts_storageaccountday1995ca_name')]",
            "location": "uksouth",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[parameters('serverfarms_ASP_Day19_8ab8_name')]",
            "location": "UK South",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "kind": "functionapp",
            "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2019-06-01",
            "name": "[parameters('smartdetectoralertrules_failure_anomalies___aircompressor_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_aircompressor_name'))]"
            ],
            "properties": {
                "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "PT1M",
                "detector": {
                    "id": "FailureAnomaliesDetector"
                },
                "scope": [
                    "[resourceId('microsoft.insights/components', parameters('components_aircompressor_name'))]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[parameters('actiongroups_application_20insights_20smart_20detection_externalid')]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_storageaccountday1995ca_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountday1995ca_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('sites_aircompressor_name')]",
            "location": "UK South",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_Day19_8ab8_name'))]"
            ],
            "kind": "functionapp",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_aircompressor_name'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_aircompressor_name'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_Day19_8ab8_name'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_aircompressor_name'), '/web')]",
            "location": "UK South",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_aircompressor_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$aircompressor",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "clientSecretCertificateThumbprint": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ],
                    "supportCredentials": false
                },
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0,
                "fileChangeAuditEnabled": false,
                "functionsRuntimeScaleMonitoringEnabled": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_aircompressor_name'), '/1f261ffae06e461582c9fd62b2016467')]",
            "location": "UK South",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_aircompressor_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "VS Code",
                "deployer": "Push-Deployer",
                "message": "Created via a push deployment",
                "start_time": "2019-12-19T19:14:16.4082386Z",
                "end_time": "2019-12-19T19:14:30.8337018Z",
                "active": true
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_aircompressor_name'), '/Compressor')]",
            "location": "UK South",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_aircompressor_name'))]"
            ],
            "properties": {
                "script_root_path_href": "https://aircompressor.azurewebsites.net/admin/vfs/site/wwwroot/Compressor/",
                "script_href": "https://aircompressor.azurewebsites.net/admin/vfs/site/wwwroot/bin/functions.dll",
                "config_href": "https://aircompressor.azurewebsites.net/admin/vfs/site/wwwroot/Compressor/function.json",
                "href": "https://aircompressor.azurewebsites.net/admin/functions/Compressor",
                "config": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_aircompressor_name'), '/FillBallonsFromTank')]",
            "location": "UK South",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_aircompressor_name'))]"
            ],
            "properties": {
                "script_root_path_href": "https://aircompressor.azurewebsites.net/admin/vfs/site/wwwroot/FillBallonsFromTank/",
                "script_href": "https://aircompressor.azurewebsites.net/admin/vfs/site/wwwroot/bin/functions.dll",
                "config_href": "https://aircompressor.azurewebsites.net/admin/vfs/site/wwwroot/FillBallonsFromTank/function.json",
                "href": "https://aircompressor.azurewebsites.net/admin/functions/FillBallonsFromTank",
                "config": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_aircompressor_name'), '/QueryTank')]",
            "location": "UK South",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_aircompressor_name'))]"
            ],
            "properties": {
                "script_root_path_href": "https://aircompressor.azurewebsites.net/admin/vfs/site/wwwroot/QueryTank/",
                "script_href": "https://aircompressor.azurewebsites.net/admin/vfs/site/wwwroot/bin/functions.dll",
                "config_href": "https://aircompressor.azurewebsites.net/admin/vfs/site/wwwroot/QueryTank/function.json",
                "href": "https://aircompressor.azurewebsites.net/admin/functions/QueryTank",
                "config": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_aircompressor_name'), '/Tank')]",
            "location": "UK South",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_aircompressor_name'))]"
            ],
            "properties": {
                "script_root_path_href": "https://aircompressor.azurewebsites.net/admin/vfs/site/wwwroot/Tank/",
                "script_href": "https://aircompressor.azurewebsites.net/admin/vfs/site/wwwroot/bin/functions.dll",
                "config_href": "https://aircompressor.azurewebsites.net/admin/vfs/site/wwwroot/Tank/function.json",
                "href": "https://aircompressor.azurewebsites.net/admin/functions/Tank",
                "config": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_aircompressor_name'), '/', parameters('sites_aircompressor_name'), '.azurewebsites.net')]",
            "location": "UK South",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_aircompressor_name'))]"
            ],
            "properties": {
                "siteName": "aircompressor",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_storageaccountday1995ca_name'), '/default/aircompressor-leases')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_storageaccountday1995ca_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountday1995ca_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_storageaccountday1995ca_name'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_storageaccountday1995ca_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountday1995ca_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_storageaccountday1995ca_name'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_storageaccountday1995ca_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountday1995ca_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        }
    ]
}